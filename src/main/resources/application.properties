# configure your datasource
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
# Banco de dados H2 em execução local (executar JAR anexo)
#quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/~/test

# Banco de dados H2 em memória
quarkus.datasource.jdbc.url=jdbc:h2:mem:myDB
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true

# Config DocumentacaoSwagger
quarkus.swagger-ui.always-include=true
quarkus.health.openapi.included=true
quarkus.swagger-ui.urls.default=/api-docs-json
quarkus.smallrye-openapi.path=/api-docs-json
quarkus.swagger-ui.path=/api-docs
quarkus.swagger-ui.filter=true

#Quarkus Securty oauth2
#quarkus.oauth2.client-id=client_id
#quarkus.oauth2.client-secret=secret
#quarkus.oauth2.introspection-url=http://oauth-server/introspect

quarkus.security.users.file.enabled=true
quarkus.security.users.file.users=test-users.properties
quarkus.security.users.file.roles=test-roles.properties
quarkus.security.users.file.realm-name=MyRealm
quarkus.security.users.file.plain-text=true

quarkus.http.auth.policy.role-policy1.roles-allowed=Admin                      
quarkus.http.auth.permission.roles1.paths=/basic/admin          
quarkus.http.auth.permission.roles1.policy=role-policy1
quarkus.http.auth.policy.role-policy2.roles-allowed=Admin, User                     
quarkus.http.auth.permission.roles2.paths=/basic/user         
quarkus.http.auth.permission.roles2.policy=role-policy2